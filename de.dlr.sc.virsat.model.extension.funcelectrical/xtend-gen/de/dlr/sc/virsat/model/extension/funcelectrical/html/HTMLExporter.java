/**
 * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 */
package de.dlr.sc.virsat.model.extension.funcelectrical.html;

import com.google.common.base.Objects;
import de.dlr.sc.virsat.model.dvlm.roles.Discipline;
import de.dlr.sc.virsat.model.dvlm.roles.UserRegistry;
import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;
import de.dlr.sc.virsat.model.dvlm.types.impl.VirSatUuid;
import de.dlr.sc.virsat.model.extension.funcelectrical.html.Area;
import de.dlr.sc.virsat.model.extension.funcelectrical.html.CheckSumCreator;
import de.dlr.sc.virsat.model.extension.funcelectrical.html.SEILink;
import de.dlr.sc.virsat.model.extension.funcelectrical.model.Interface;
import de.dlr.sc.virsat.model.extension.funcelectrical.model.InterfaceEnd;
import de.dlr.sc.virsat.model.extension.funcelectrical.model.InterfaceType;
import de.dlr.sc.virsat.model.extension.funcelectrical.model.InterfaceTypeCollection;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IterableExtensions;

@SuppressWarnings("all")
public class HTMLExporter {
  public String getElementsRecursively(final StructuralElementInstance sc) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("{name: \'");
    String _name = sc.getName();
    _builder.append(_name);
    _builder.append("\',");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    {
      int _size = sc.getChildren().size();
      boolean _notEquals = (_size != 0);
      if (_notEquals) {
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("children: [");
        _builder.newLine();
        _builder.append("\t");
        _builder.newLine();
        {
          EList<StructuralElementInstance> _children = sc.getChildren();
          for(final StructuralElementInstance c : _children) {
            String _elementsRecursively = this.getElementsRecursively(c);
            _builder.append(_elementsRecursively);
            _builder.newLineIfNotEmpty();
            {
              EList<StructuralElementInstance> _children_1 = sc.getChildren();
              int _size_1 = sc.getChildren().size();
              int _minus = (_size_1 - 1);
              StructuralElementInstance _get = _children_1.get(_minus);
              boolean _notEquals_1 = (!Objects.equal(c, _get));
              if (_notEquals_1) {
                _builder.append(",");
                _builder.newLine();
              }
            }
          }
        }
        _builder.append("\t");
        _builder.append("]");
        _builder.newLine();
      }
    }
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
  
  public CharSequence getSubPages(final StructuralElementInstance sc, final List<InterfaceEnd> seiInterfaceEnds, final List<Interface> seiInterfaces, final List<InterfaceType> seiInterfaceTypes, final List<SEILink> seiLinks) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<style type=\"text/css\">");
    _builder.newLine();
    _builder.append("@media screen");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("#forprint {");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("display: none;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("#footerHolder {");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("display: none;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@media print");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("{    ");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("#button");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("display: none !important;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("a[href]:after {");
    _builder.newLine();
    _builder.append("\t\t\t    ");
    _builder.append("content: none !important;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("a {");
    _builder.newLine();
    _builder.append("\t\t\t  ");
    _builder.append("color: inherit;");
    _builder.newLine();
    _builder.append("\t\t\t  ");
    _builder.append("text-decoration: inherit;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("#forprint {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("display: initial;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("#footerHolder {");
    _builder.newLine();
    _builder.append("\t\t    \t");
    _builder.append("display: initial;");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("table tr:nth-child(odd) td {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("background-color: #EEEEEF;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("table tr:nth-child(even) td {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("background-color: #FFFFFF;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("footer {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("font-family: \'DejaVu Sans Mono\', monospace;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("font-size: 14px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("font-weight: bold;");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("height: 5px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("display: table-row;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("text-align: center;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("vertical-align: middle;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("top: 50%;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append(".tabEnd {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("text-align: left;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("background-repeat: no-repeat;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("color: #253441;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("font-weight: bold;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("clear: none;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("overflow: hidden;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("padding-top: 10px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("padding-bottom: 10px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("padding-left: 1px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("margin-top: 20px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("white-space: pre;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("margin-right: 3px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("float: left;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("background-color: #F8981D;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("height: 16px;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("tr,");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("td,");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("th {");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("font-family: \'DejaVu Sans Mono\', monospace;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("font-size: 14px;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("font-weight: bold;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("border: 1px solid #EEE;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("color: #253441;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("padding: 0px;padding-top: 10px;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("padding-left: 1px;");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("td {");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("vertical-align: middle;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("padding-bottom: 10px;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("th {");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("background: #dee3e9;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("text-align: left;");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("padding: 8px 3px 3px 7px;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("table{");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("border: 1px solid #EEE;");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("color: #253441;");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("padding: 0px;padding-top: 10px;");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("padding-left: 1px;");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("width: 100%;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}      ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("#data {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("width: 95%;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("float: left;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("overflow: hidden;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("padding-top: 30px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("padding-right: 30px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("padding-bottom: 30px;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("padding-left: 30px;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("#noprint {");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("display:none;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("h1 {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("text-align: center;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("#button {");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("background-image: url(PrinterLogo.png);");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("background-size: cover;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("width: 70px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("height: 70px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("padding: 10px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("line-height: 50px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("text-align: left;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("text-indent: 10px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("font-family: Verdana, Geneva, sans-serif;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("font-size: 16px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("color: #333;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("-webkit-border-radius: 5px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("-moz-border-radius: 5px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("border-radius: 5px;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("border: 1px solid #333;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("cursor: pointer;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("margin: 20px;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("</style>");
    _builder.newLine();
    _builder.append("<!DOCTYPE html>");
    _builder.newLine();
    _builder.append("<html>");
    _builder.newLine();
    _builder.append("<div id=\"forprint\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<img src=\"ProjectLogo.png\" alt=\"\" />");
    _builder.newLine();
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("<button id = \"button\" onclick=\"myFunction()\"></button>");
    _builder.newLine();
    _builder.append("<script>");
    _builder.newLine();
    _builder.append("function myFunction() {");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("window.print();");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("</script>");
    _builder.newLine();
    {
      if ((seiLinks != null)) {
        {
          for(final SEILink seiLink : seiLinks) {
            CharSequence _seiLinkHTML = this.getSeiLinkHTML(sc, seiLink);
            _builder.append(_seiLinkHTML);
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.append("<div id=\"data\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<table>");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("<caption><span class=\"tabEnd\"> Element </span></caption>");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("<colgroup>");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("<col span=\"1\" style=\"width: 50%;\">");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("<col span=\"1\" style=\"width: 50%;\">");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("</colgroup>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th >Element Name </th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<td >");
    String _name = sc.getName();
    _builder.append(_name, "            ");
    _builder.append("</td>");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th>Element UUID</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<td>");
    VirSatUuid _uuid = sc.getUuid();
    _builder.append(_uuid, "            ");
    _builder.append("</td>");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th>Assigned Discipline</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<td>");
    _builder.newLine();
    {
      Discipline _assignedDiscipline = sc.getAssignedDiscipline();
      boolean _tripleNotEquals = (_assignedDiscipline != null);
      if (_tripleNotEquals) {
        _builder.append("            ");
        String _name_1 = sc.getAssignedDiscipline().getName();
        _builder.append(_name_1, "            ");
        _builder.append("   ");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("            ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("<th>Revision Number</th>    \t");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("<td>    </td>\t            ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("<th>Checksum</th>    \t");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("<td>");
    String _objectChecksum = CheckSumCreator.getObjectChecksum(sc);
    _builder.append(_objectChecksum, "           ");
    _builder.append("</td>\t            ");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("   ");
    _builder.newLine();
    {
      String _name_2 = sc.getType().getName();
      String _name_3 = InterfaceTypeCollection.class.getClass().getName();
      boolean _notEquals = (!Objects.equal(_name_2, _name_3));
      if (_notEquals) {
        _builder.append("\t ");
        _builder.append(" ");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append(" ");
        _builder.append("<table>");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append(" \t");
        _builder.append("<caption><span class=\"tabEnd\"> Interface Ends </span></caption>");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append("     ");
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append("         ");
        _builder.append("<th>InterfaceEndName</th>");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append("         ");
        _builder.append("<th>InterfaceEndType</th>");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append("     ");
        _builder.append("</tr>");
        _builder.newLine();
        {
          for(final InterfaceEnd ie : seiInterfaceEnds) {
            _builder.append("\t ");
            _builder.append("     ");
            _builder.append("<tr>");
            _builder.newLine();
            _builder.append("\t ");
            _builder.append("     ");
            _builder.append("    ");
            _builder.append("<td>");
            String _name_4 = ie.getName();
            _builder.append(_name_4, "\t          ");
            _builder.append("</td>");
            _builder.newLineIfNotEmpty();
            _builder.append("\t ");
            _builder.append("     ");
            _builder.append("    ");
            _builder.append("<td>");
            {
              InterfaceType _type = ie.getType();
              boolean _tripleNotEquals_1 = (_type != null);
              if (_tripleNotEquals_1) {
                _builder.append("  ");
                String _name_5 = ie.getType().getName();
                _builder.append(_name_5, "\t          ");
                _builder.append("  ");
              }
            }
            _builder.append("</td>");
            _builder.newLineIfNotEmpty();
            _builder.append("\t ");
            _builder.append("     ");
            _builder.append("</tr>");
            _builder.newLine();
          }
        }
        _builder.append("\t ");
        _builder.append(" ");
        _builder.append("</table>");
        _builder.newLine();
        _builder.append("\t ");
        CharSequence _interfaceTable = this.getInterfaceTable(seiInterfaces);
        _builder.append(_interfaceTable, "\t ");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      String _name_6 = sc.getType().getName();
      String _simpleName = InterfaceTypeCollection.class.getClass().getSimpleName();
      boolean _equals = Objects.equal(_name_6, _simpleName);
      if (_equals) {
        _builder.append("\t");
        _builder.append("<table>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("<caption><span class=\"tabEnd\"> InterfaceTypes </span></caption>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("<th>InterfaceType</th>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("</tr>");
        _builder.newLine();
        _builder.newLine();
        {
          for(final InterfaceType ie_1 : seiInterfaceTypes) {
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("<tr>");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("<td>");
            String _name_7 = ie_1.getName();
            _builder.append(_name_7, "\t\t\t");
            _builder.append("</td> ");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("</tr>\t");
            _builder.newLine();
          }
        }
        _builder.newLine();
        _builder.append("\t");
        _builder.append("</table>");
        _builder.newLine();
      }
    }
    _builder.append("</div>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<footer>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<div id = \"footerHolder\">");
    _builder.newLine();
    _builder.append("  \t\t");
    LocalDateTime ldt = LocalDateTime.now();
    _builder.append(" Exported by : ");
    String _userName = UserRegistry.getInstance().getUserName();
    _builder.append(_userName, "  \t\t");
    _builder.append(" Export date : ");
    int _hour = ldt.getHour();
    String _plus = (Integer.valueOf(_hour) + ":");
    int _minute = ldt.getMinute();
    String _plus_1 = (_plus + Integer.valueOf(_minute));
    String _plus_2 = (_plus_1 + " ");
    int _dayOfMonth = ldt.getDayOfMonth();
    String _plus_3 = (_plus_2 + Integer.valueOf(_dayOfMonth));
    String _plus_4 = (_plus_3 + "/");
    int _monthValue = ldt.getMonthValue();
    String _plus_5 = (_plus_4 + Integer.valueOf(_monthValue));
    String _plus_6 = (_plus_5 + "/");
    int _year = ldt.getYear();
    String _plus_7 = (_plus_6 + Integer.valueOf(_year));
    _builder.append(_plus_7, "  \t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</footer>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("</html>");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence getInterfaceTable(final List<Interface> interfaces) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<table>");
    _builder.newLine();
    _builder.append("\t     ");
    _builder.append("<caption><span class=\"tabEnd\"> Interfaces </span></caption>");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<th>InterfaceName</th>");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<th>FromInterfaceEnd</th>");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<th>Container</th>");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<th>ToInterfaceEnd</th>");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<th>Container</th>");
    _builder.newLine();
    _builder.append("\t ");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("</tr>");
    _builder.newLine();
    {
      final Function1<Interface, Boolean> _function = (Interface it) -> {
        return Boolean.valueOf(((it.getInterfaceEndFrom() != null) && (it.getInterfaceEndTo() != null)));
      };
      Iterable<Interface> _filter = IterableExtensions.<Interface>filter(interfaces, _function);
      for(final Interface i : _filter) {
        _builder.append("\t        ");
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t        ");
        _builder.append("\t");
        EObject _eContainer = i.getInterfaceEndFrom().getTypeInstance().eContainer();
        StructuralElementInstance temp = ((StructuralElementInstance) _eContainer);
        _builder.newLineIfNotEmpty();
        _builder.append("\t        ");
        _builder.append("\t");
        EObject _eContainer_1 = i.getInterfaceEndTo().getTypeInstance().eContainer();
        StructuralElementInstance temp2 = ((StructuralElementInstance) _eContainer_1);
        _builder.newLineIfNotEmpty();
        _builder.append("\t        ");
        _builder.append("    ");
        _builder.append("<td>");
        String _name = i.getName();
        _builder.append(_name, "\t            ");
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t        ");
        _builder.append("    ");
        _builder.append("<td>");
        {
          InterfaceEnd _interfaceEndFrom = i.getInterfaceEndFrom();
          boolean _tripleNotEquals = (_interfaceEndFrom != null);
          if (_tripleNotEquals) {
            _builder.append(" <a href=\"");
            String _name_1 = temp.getName();
            _builder.append(_name_1, "\t            ");
            _builder.append(".htm\"> ");
            String _name_2 = i.getInterfaceEndFrom().getTypeInstance().getName();
            _builder.append(_name_2, "\t            ");
            _builder.append(" </a> ");
          }
        }
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t        ");
        _builder.append("    ");
        _builder.append("<td>");
        {
          InterfaceEnd _interfaceEndFrom_1 = i.getInterfaceEndFrom();
          boolean _tripleNotEquals_1 = (_interfaceEndFrom_1 != null);
          if (_tripleNotEquals_1) {
            _builder.append(" <a href=\"");
            String _name_3 = temp.getName();
            _builder.append(_name_3, "\t            ");
            _builder.append(".htm\"> ");
            String _name_4 = temp.getName();
            _builder.append(_name_4, "\t            ");
            _builder.append(" </a> ");
          }
        }
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t        ");
        _builder.append("    ");
        _builder.append("<td>");
        {
          InterfaceEnd _interfaceEndTo = i.getInterfaceEndTo();
          boolean _tripleNotEquals_2 = (_interfaceEndTo != null);
          if (_tripleNotEquals_2) {
            _builder.append(" <a href=\"");
            String _name_5 = temp2.getName();
            _builder.append(_name_5, "\t            ");
            _builder.append(".htm\"> ");
            String _name_6 = i.getInterfaceEndTo().getTypeInstance().getName();
            _builder.append(_name_6, "\t            ");
            _builder.append(" ");
          }
        }
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t        ");
        _builder.append("    ");
        _builder.append("<td>");
        {
          InterfaceEnd _interfaceEndFrom_2 = i.getInterfaceEndFrom();
          boolean _tripleNotEquals_3 = (_interfaceEndFrom_2 != null);
          if (_tripleNotEquals_3) {
            _builder.append(" <a href=\"");
            String _name_7 = temp2.getName();
            _builder.append(_name_7, "\t            ");
            _builder.append(".htm\"> ");
            String _name_8 = temp2.getName();
            _builder.append(_name_8, "\t            ");
            _builder.append(" </a> ");
          }
        }
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t        ");
        _builder.append("</tr>");
        _builder.newLine();
      }
    }
    _builder.append("\t    ");
    _builder.append("</table>");
    return _builder;
  }
  
  public CharSequence getSeiLinkHTML(final StructuralElementInstance sc, final SEILink seiLink) {
    StringConcatenation _builder = new StringConcatenation();
    {
      String _name = sc.getName();
      String _containerSEIname = seiLink.getContainerSEIname();
      boolean _equals = Objects.equal(_name, _containerSEIname);
      if (_equals) {
        _builder.newLineIfNotEmpty();
        _builder.append("<h1 ><img src= \"");
        String _name_1 = sc.getName();
        _builder.append(_name_1);
        _builder.append(".png\" align=\"middle\" alt=\"alttext\" usemap=\"#mapname\" > </h1>");
        _builder.newLineIfNotEmpty();
        _builder.append("<map name=\"mapname\">");
        _builder.newLine();
        {
          ArrayList<Area> _areas = seiLink.getAreas();
          for(final Area area : _areas) {
            _builder.append("\t");
            _builder.append("<area shape=\"rect\" coords=\"");
            int _topLeftx = area.getTopLeftx();
            _builder.append(_topLeftx, "\t");
            _builder.append(",");
            int _topLefty = area.getTopLefty();
            _builder.append(_topLefty, "\t");
            _builder.append(",");
            int _bottomRightx = area.getBottomRightx();
            _builder.append(_bottomRightx, "\t");
            _builder.append(",");
            int _bottomRighty = area.getBottomRighty();
            _builder.append(_bottomRighty, "\t");
            _builder.append("\" href=\"");
            String _linkSEIname = area.getLinkSEIname();
            _builder.append(_linkSEIname, "\t");
            _builder.append(".htm\" alt=\"alttext\">");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("</map>");
        _builder.newLine();
        _builder.append("\t\t");
      }
    }
    return _builder;
  }
  
  public CharSequence someHTML(final StructuralElementInstance sc) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    _builder.append("<!DOCTYPE html>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<html>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/vue/1.0.24/vue.js\"></script>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<style type=\"text/css\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@media print");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("{    ");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("#tree");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("display: none !important;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("body {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("font-family: Menlo, Consolas, monospace;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("color: #444;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append(".item {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("cursor: pointer;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append(".bold {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("font-weight: bold;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append(".helper {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("display: inline-block;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("height: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("vertical-align: middle;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("ul {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("padding-left: 1em;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("line-height: 1.5em;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("list-style-type: dot;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("html,");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("body {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("height: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("min-height: 100%;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("#generalwrapper {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("height: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("min-height: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("width: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("border: 3px solid #4A8AB8;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("display: table;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("#wrapper {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("height: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("min-height: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("display: table-row;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("display: table;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("width: 100%;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("#datadiv {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("height: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("min-height: 500px;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("min-width: 500px;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("width: 70%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("object-fit: contain;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("display: table-cell;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("overflow:visible;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("#tree {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("border-right: 15px solid #4A8AB8;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("color: #4A8AB8;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("vertical-align: top;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("display: table-cell;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("width: 5%;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("header,");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("footer {");
    _builder.newLine();
    _builder.append("\t    \t");
    _builder.append("height: 5px;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("width: 100%;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("color: white;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("background-color: #4A8AB8;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("display: table-row;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("text-align: center;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("vertical-align: middle;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("top: 50%;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("article {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("float: left;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("padding: 1em;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("overflow: hidden;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</style>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<script type=\'text/javascript\'>");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("//<![CDATA[");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("window.onload = function() {");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("// demo data");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("var data = ");
    String _elementsRecursively = this.getElementsRecursively(sc);
    _builder.append(_elementsRecursively, "\t            ");
    _builder.newLineIfNotEmpty();
    _builder.append("\t            ");
    _builder.append("// define the item component");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("Vue.component(\'item\', {");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("template: \'#item-template\',");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("props: {");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("model: Object");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("data: function() {");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("return {");
    _builder.newLine();
    _builder.append("\t                        ");
    _builder.append("open: false");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("computed: {");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("isFolder: function() {");
    _builder.newLine();
    _builder.append("\t                        ");
    _builder.append("return this.model.children &&");
    _builder.newLine();
    _builder.append("\t                            ");
    _builder.append("this.model.children.length");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("methods: {");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("toggle: function() {");
    _builder.newLine();
    _builder.append("\t                        ");
    _builder.append("if (this.isFolder) {");
    _builder.newLine();
    _builder.append("\t                            ");
    _builder.append("this.open = !this.open");
    _builder.newLine();
    _builder.append("\t                        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t                        ");
    _builder.append("var name = this.model.name");
    _builder.newLine();
    _builder.append("\t                        ");
    _builder.append("var url = \"resources/\" + name + \".htm\"");
    _builder.newLine();
    _builder.append("\t                        ");
    _builder.append("var start = new Date().getTime()");
    _builder.newLine();
    _builder.append("\t                        ");
    _builder.append("document.getElementById(\"datadiv\").innerHTML = \'<object width=100% height=100% type=\"text/html\" data=\"\' + url + \'\" onload=\"alert(new Date().getTime() - start)\"></object>\'");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("})");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("// boot up the demo");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("var demo = new Vue({");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("el: \'#demo\',");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("data: {");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("treeData: data");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("})\t");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("} //]]>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</script>\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<script type=\"text/x-template\" id=\"item-template\">");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("<li>");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("<div :class=\"{bold: isFolder}\" @click=\"toggle\">");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("{{model.name}}");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<span v-if=\"isFolder\">[{{open ? \'-\' : \'+\'}}]</span>");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("<ul v-show=\"open\" v-if=\"isFolder\">");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<item class=\"item\" v-for=\"model in model.children\" :model=\"model\">");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("</item>");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("</li>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</script>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div id=\"generalwrapper\">");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("<header>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("This Document has been generated using Virtual Satellite 4 Core.");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("</header>");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("<div id=\"wrapper\">");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("<div id=\"tree\">");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<img src=\"resources/ProjectLogo.png\" alt=\"\" />");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("<article>");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("<ul id=\"demo\">");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("<item class=\"item\" :model=\"treeData\">");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("</item>");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("</article>");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("<div id=\"datadiv\">");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("Click on the tree to see the interfaces and interface ends");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("<footer>");
    _builder.newLine();
    _builder.append("\t       ");
    _builder.append("Exported by : ");
    String _userName = UserRegistry.getInstance().getUserName();
    _builder.append(_userName, "\t       ");
    _builder.append(" Export date : ");
    CharSequence _timestamp = this.getTimestamp();
    _builder.append(_timestamp, "\t       ");
    _builder.newLineIfNotEmpty();
    _builder.append("\t    ");
    _builder.append("</footer>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</html>");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence getTimestamp() {
    StringConcatenation _builder = new StringConcatenation();
    LocalDateTime ldt = LocalDateTime.now();
    _builder.newLineIfNotEmpty();
    int _hour = ldt.getHour();
    String _plus = (Integer.valueOf(_hour) + ":");
    int _minute = ldt.getMinute();
    String _plus_1 = (_plus + Integer.valueOf(_minute));
    String _plus_2 = (_plus_1 + " ");
    int _dayOfMonth = ldt.getDayOfMonth();
    String _plus_3 = (_plus_2 + Integer.valueOf(_dayOfMonth));
    String _plus_4 = (_plus_3 + "/");
    int _monthValue = ldt.getMonthValue();
    String _plus_5 = (_plus_4 + Integer.valueOf(_monthValue));
    String _plus_6 = (_plus_5 + "/");
    int _year = ldt.getYear();
    String _plus_7 = (_plus_6 + Integer.valueOf(_year));
    _builder.append(_plus_7);
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    return _builder;
  }
}
