/*******************************************************************************
 * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
Concept de.dlr.sc.virsat.model.extension.requirements displayname "Requirements"  description "Extension for Requirement Specification" version 0.2 beta 
{

	StructuralElement RequirementsConfigurationCollection description "Storage for configuration elements of requirements" {
		IsRootStructuralElement;
	}

	Category RequirementsSpecification {
		Applicable For All;
		
		Resource exportFile;
		Type requirements [] of Category RequirementObject;
		Type typeDefinitions [] of Category RequirementType;
	}	
	
	Category RequirementsConfiguration {
		Applicable For [ RequirementsConfigurationCollection];
		StringProperty fileName;
		Type typeDefinitions [] of Category RequirementType;
	}
	
	Category RequirementObject description "Interface for specification objects" {
		IsAbstract;
	}
	
	Category RequirementGroup extends RequirementObject {
		Type children [] of Category RequirementObject;
	}
	
	Category Requirement extends RequirementObject {
		Reference reqType of Type RequirementType;
		Type elements [] of Category AttributeValue;
		EnumProperty status values [Open = 0, FullyCompliant = 1, PartialCompliant = 2, NonCompliant = 3, NotApplicable = 4];
	}
	
	Category AttributeValue {
		Reference attType of Type RequirementAttribute;
		StringProperty value;
	}
	
	Category RequirementType description "Definition of a requirement type" {
		Type attributes[] of Category RequirementAttribute;
	}
	
	Category RequirementAttribute description "Attribute definition for requirements" {
		EnumProperty  type values [Boolean = 0, Date = 1, Enumeration = 2, Integer= 3, Real= 4, String = 5, Identifier = 6] default String;
		Type enumeration of Category EnumerationDefinition;
	}
	
	Category EnumerationDefinition {
		Type literals [] of Category EnumerationLiteral;
	}
	
	Category EnumerationLiteral {}
}

