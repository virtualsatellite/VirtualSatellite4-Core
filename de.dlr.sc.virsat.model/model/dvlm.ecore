<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="dvlm" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8" nsPrefix="dvlm">
  <eClassifiers xsi:type="ecore:EClass" name="Repository" eSuperTypes="#//general/IUuid #//general/IAssignedDiscipline">
    <eStructuralFeatures xsi:type="ecore:EReference" name="rootEntities" upperBound="-1"
        eType="#//structural/StructuralElementInstance"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="roleManagement" lowerBound="1"
        eType="#//roles/RoleManagement"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="unitManagement" lowerBound="1"
        eType="#//units/UnitManagement"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="activeConcepts" upperBound="-1"
        eType="#//concepts/Concept" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="suppressedValidators" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eSubpackages name="structural" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/s" nsPrefix="dvlm_s">
    <eClassifiers xsi:type="ecore:EClass" name="IApplicableFor" abstract="true" interface="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The applicable for is used to decide to which type of structural element something can be assigned to. SO it means that e.g. A Category Assignment can be assigned to a SystemComponent. If the Category is applicable for the StructuralElement the SystemComponent is typed with."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="applicableFor" upperBound="-1"
          eType="#//structural/StructuralElement"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isApplicableForAll" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="cardinality" unique="false"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" defaultValueLiteral="0"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StructuralElement" eSuperTypes="#//general/IQualifiedName #//general/IDescription #//structural/IApplicableFor #//concepts/IConceptTypeDefinition #//inheritance/ICanInheritFrom">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isRootStructuralElement"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StructuralElementInstance" eSuperTypes="#//general/IUuid #//general/IDescription #//general/IName #//general/IAssignedDiscipline #//categories/ICategoryAssignmentContainer #//general/IInstance #//inheritance/IInheritsFrom">
      <eOperations name="getDeepChildren" upperBound="-1" eType="#//structural/StructuralElementInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This method hands back all StructuralElement Instances which are nested by a TreeRelation"/>
          <details key="body" value="EList&lt;StructuralElementInstance> children = new  org.eclipse.emf.common.util.BasicEList&lt;>();&#xD;&#xA;for (StructuralElementInstance structuralElementInstance : getChildren()) {&#xD;&#xA;&#x9;children.add(structuralElementInstance);&#xD;&#xA;&#x9;EList&lt;StructuralElementInstance> nestedChildren = structuralElementInstance.getDeepChildren();&#xD;&#xA;&#x9;children.addAll(nestedChildren);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return children;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//structural/StructuralElement"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="relationInstances" upperBound="-1"
          eType="#//structural/RelationInstance" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
          eType="#//structural/StructuralElementInstance" containment="true" eOpposite="#//structural/StructuralElementInstance/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" eType="#//structural/StructuralElementInstance"
          eOpposite="#//structural/StructuralElementInstance/children"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="GeneralRelation" eSuperTypes="#//general/IQualifiedName #//structural/IApplicableFor #//general/IDescription #//concepts/IConceptTypeDefinition">
      <eStructuralFeatures xsi:type="ecore:EReference" name="referencedType" lowerBound="1"
          eType="#//structural/StructuralElement"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RelationInstance" eSuperTypes="#//general/IUuid #//general/IDescription #//general/IName">
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//structural/GeneralRelation"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="references" eType="#//structural/StructuralElementInstance"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="general" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/g" nsPrefix="dvlm_g">
    <eClassifiers xsi:type="ecore:EClass" name="IName" abstract="true" interface="true">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IDescription" abstract="true" interface="true">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IUuid" abstract="true" interface="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This Interface provides a Universal Unique Identifier to the model"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="uuid" eType="#//types/Uuid"
          defaultValueLiteral="" iD="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IQualifiedName" abstract="true" interface="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This Interface provides a Qualified ID to the model.&#xD;&#xA;It is needed for the categories and properties which will be translated into classes using the Concepts Framework. Therefore the qualified names should follow the java package and classes contract/regulations"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral="de.dlr.sc.model.dvlm.noid"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="fullQualifiedName" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          changeable="false" volatile="true" transient="true" defaultValueLiteral="de.dlr.sc.model.dvlm.noid"
          derived="true" iD="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The FullQualifiedName (FQN) is the combination of the current name plus the names of the containers. In the Categories and properties we usually have FQN which follow the pattern of Concept.Category.Property .&#xD;&#xA;WARNING!!! This attribute cannot be implemented through the model by an EOperation. An EOperation cannot be set to be the ID of the class. In contrast this derived feature builds the id of this class and is important to  uniquely identify concepts and its contained elements for registration within a repository."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral=""/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IComment" abstract="true" interface="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="In contrast to the description, the comemnt is intended to capture design decisions. Such as an assigned Category. The purpose of the assigned pÃ¼roperties is described where as the values that are set by the User may come along/across with a comment. Therefore the UI should display the description of the property and let the user set a comment."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="comment" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IAssignedDiscipline" abstract="true"
        interface="true">
      <eOperations name="getContainedIAssignedDisciplines" upperBound="-1" eType="#//general/IAssignedDiscipline">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This method hands back all contained IAssignedDiscipline objects"/>
          <details key="body" value="EList&lt;IAssignedDiscipline> containedIAssignedDiscipline = new org.eclipse.emf.common.util.BasicEList&lt;>();&#xD;&#xA;org.eclipse.emf.common.util.TreeIterator&lt;Object> iter = org.eclipse.emf.ecore.util.EcoreUtil.getAllContents(this, true);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;iter.forEachRemaining((object) -> {&#xD;&#xA;&#x9;if (object instanceof IAssignedDiscipline) {&#xD;&#xA;&#x9;&#x9;containedIAssignedDiscipline.add((IAssignedDiscipline) object);&#xD;&#xA;&#x9;}&#xD;&#xA;});&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;return containedIAssignedDiscipline;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="assignedDiscipline" lowerBound="1"
          eType="#//roles/Discipline"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IInstance" abstract="true" interface="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This interface should be atatched to everything which is considered a runtime instance of the DVLM. This can be StructuralElementInstance, CategoryAssignments or PropertyInstances. Definitions are no Instances and should never carry this interface."/>
      </eAnnotations>
      <eOperations name="getFullQualifiedInstanceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This method hands back the full qualified path of the current instance in the DVLM. The FAN consists of all relevant names from the current object to its top container delimited by a &quot;.&quot;"/>
          <details key="body" value="return de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper.getFullQualifedNameForInstance(this);"/>
        </eAnnotations>
      </eOperations>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="concepts" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/c" nsPrefix="dvlm_c">
    <eClassifiers xsi:type="ecore:EClass" name="Concept" eSuperTypes="#//general/IQualifiedName #//general/IDescription #//concepts/IActiveConcept #//concepts/IImports #//concepts/IEImports">
      <eOperations name="getNonAbstractCategories" upperBound="-1" eType="#//categories/Category">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="returns all categories from the concept which are not abstract."/>
          <details key="body" value="EList&lt;Category> allCategories = new org.eclipse.emf.common.util.BasicEList&lt;>();&#xD;&#xA;&#xD;&#xA;for (Category category : getCategories()) {&#xD;&#xA;&#x9;if (!category.isIsAbstract()) {&#xD;&#xA;&#x9;&#x9;allCategories.add(category);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;return allCategories;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="categories" upperBound="-1"
          eType="#//categories/Category" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="structuralElements" upperBound="-1"
          eType="#//structural/StructuralElement" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="relations" upperBound="-1"
          eType="#//structural/GeneralRelation" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="version" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral="1.0"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="DMF" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="FALSE"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="displayName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="beta" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ConceptImport">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="importedNamespace" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IActiveConcept" abstract="true" interface="true">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="active" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IImports" abstract="true" interface="true">
      <eStructuralFeatures xsi:type="ecore:EReference" name="imports" upperBound="-1"
          eType="#//concepts/ConceptImport" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IConceptTypeDefinition" abstract="true"
        interface="true" eSuperTypes="#//general/IQualifiedName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This interface is needed to detect special Types when importing a concept to a repository.&#xD;&#xA;If the importer imports a reference, they are bound to their xmi representation. So if Concept A is referencing objects in Concept B, this needs to be taken into account. But the import has to bend the references to the ConceptA in the Repository and not the original XMI."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcoreImport">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="importedNsURI" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="importedGenModel" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IEImports">
      <eStructuralFeatures xsi:type="ecore:EReference" name="ecoreImports" upperBound="-1"
          eType="#//concepts/EcoreImport" containment="true"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="roles" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/r" nsPrefix="dvlm_r">
    <eClassifiers xsi:type="ecore:EClass" name="RoleManagement" eSuperTypes="#//general/IAssignedDiscipline #//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EReference" name="disciplines" lowerBound="1"
          upperBound="-1" eType="#//roles/Discipline" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Discipline" eSuperTypes="#//general/IUuid #//general/IName">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="user" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral=""/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="units" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/u" nsPrefix="dvlm_u">
    <eClassifiers xsi:type="ecore:EClass" name="UnitManagement" eSuperTypes="#//general/IAssignedDiscipline #//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EReference" name="systemOfUnit" lowerBound="1"
          eType="#//qudv/SystemOfUnits" containment="true"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="types" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/t" nsPrefix="dvlm_t">
    <eClassifiers xsi:type="ecore:EDataType" name="Uuid" instanceClassName="de.dlr.sc.virsat.model.dvlm.types.impl.VirSatUuid"/>
    <eClassifiers xsi:type="ecore:EDataType" name="URI" instanceClassName="org.eclipse.emf.common.util.URI"/>
  </eSubpackages>
  <eSubpackages name="categories" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/cp" nsPrefix="dvlm_cp">
    <eClassifiers xsi:type="ecore:EClass" name="ATypeDefinition" abstract="true" eSuperTypes="#//general/IQualifiedName #//general/IDescription #//concepts/IConceptTypeDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="We use an abstract class for the types since it is considered to overide the operation for getting the types. This may allow to restrict and be more specific on the access of a specific PropertyInstance to its PropertyType."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ATypeInstance" abstract="true" eSuperTypes="#//general/IUuid #//general/IComment #//general/IInstance #//inheritance/IInheritanceLink">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="We use an abstract class for the types since it is considered to overide the operation for getting the types. This may allow to restrict and be more specific on the access of a specific PropertyInstance to its PropertyType."/>
      </eAnnotations>
      <eOperations name="getCategoryAssignmentContainer" eType="#//categories/ICategoryAssignmentContainer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Call this method to get a CategoryAssignmentContainer handed back for any TypeInstance. This method returns null in case it could not be found."/>
          <details key="body" value="return de.dlr.sc.virsat.model.dvlm.categories.util.CategoryAssignmentHelper.getContainerFor(this);"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="#//categories/ATypeDefinition"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Category" eSuperTypes="#//categories/ATypeDefinition #//structural/IApplicableFor #//calculation/IEquationDefinitionSectionContainer #//calculation/IEquationDefinitionInput">
      <eOperations name="getAllProperties" upperBound="-1" eType="#//categories/propertydefinitions/AProperty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This method hands back all properties of the catgeory including the ones from super (extends) categories"/>
          <details key="body" value="EList&lt;AProperty> allProperties = new org.eclipse.emf.common.util.BasicEList&lt;>();&#xD;&#xA;allProperties.addAll(getProperties());&#xD;&#xA;&#xD;&#xA;// In case this category inherits from another one (extends another category) that their properties should eb added as well&#xD;&#xA;if (extendsCategory != null) {&#xD;&#xA;&#x9;allProperties.addAll(extendsCategory.getAllProperties());&#xD;&#xA;}&#xD;&#xA;&#x9;&#xD;&#xA;return allProperties;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isExtensionOf" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This method returns true iff it is an instance of the passed typeDefinition"/>
          <details key="body" value="Category category = this;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;while (category != null) {&#xD;&#xA;&#x9;if (category.equals(typeDefinition)) {&#xD;&#xA;&#x9;&#x9;return true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;category = category.getExtendsCategory();&#xD;&#xA;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;return false;"/>
        </eAnnotations>
        <eParameters name="typeDefinition" eType="#//categories/ATypeDefinition"/>
      </eOperations>
      <eOperations name="getAllEquationDefinitions" upperBound="-1" eType="#//calculation/EquationDefinition">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This method hands back all equation definitions of the catgeory including the ones from super (extends) categories"/>
          <details key="body" value="EList&lt;EquationDefinition> allEquationDefinitions = new org.eclipse.emf.common.util.BasicEList&lt;>();&#xD;&#xA;allEquationDefinitions.addAll(getEquationDefinitions());&#xD;&#xA;&#xD;&#xA;// In case this category inherits from another one (extends another category) that their equation definitions should be added as well&#xD;&#xA;if (extendsCategory != null) {&#xD;&#xA;&#x9;allEquationDefinitions.addAll(extendsCategory.getAllEquationDefinitions());&#xD;&#xA;}&#xD;&#xA;&#x9;&#xD;&#xA;return allEquationDefinitions;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getCardinality" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="// If the cardinality is 0, check if we are extending from some category and then take their cardinality&#xD;&#xA;return cardinality == 0 &amp;&amp; getExtendsCategory() != null ? getExtendsCategory().getCardinality() : cardinality;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="properties" upperBound="-1"
          eType="#//categories/propertydefinitions/AProperty" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="FALSE"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="extendsCategory" eType="#//categories/Category"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CategoryAssignment" eSuperTypes="#//categories/ATypeInstance #//general/IName #//calculation/IEquationInput #//calculation/IEquationSectionContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="propertyInstances" upperBound="-1"
          eType="#//categories/propertyinstances/APropertyInstance" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ICategoryAssignmentContainer" abstract="true"
        interface="true" eSuperTypes="#//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EReference" name="categoryAssignments"
          upperBound="-1" eType="#//categories/CategoryAssignment" containment="true"/>
    </eClassifiers>
    <eSubpackages name="propertydefinitions" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/cp/cppd"
        nsPrefix="dvlm_cppd">
      <eClassifiers xsi:type="ecore:EClass" name="AProperty" abstract="true" eSuperTypes="#//categories/ATypeDefinition">
        <eStructuralFeatures xsi:type="ecore:EReference" name="arrayModifier" eType="#//categories/propertydefinitions/IArrayModifier"
            containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ComposedProperty" eSuperTypes="#//categories/propertydefinitions/AProperty #//calculation/IEquationDefinitionInput">
        <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
            eType="#//categories/Category"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="quantityKindName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReferenceProperty" eSuperTypes="#//categories/propertydefinitions/AProperty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A ReferenceProperty can be understood as  a Pointer in C++ or a refrence in Java. It allows to instantiate new classes within a calss or to access already instatiated via a reference."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referenceType" lowerBound="1"
            eType="#//categories/ATypeDefinition"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EReferenceProperty" eSuperTypes="#//categories/propertydefinitions/AProperty">
        <eStructuralFeatures xsi:type="ecore:EReference" name="referenceType" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IIntrinsicTypeProperty" abstract="true"
          interface="true">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AQudvTypeProperty" abstract="true"
          eSuperTypes="#//calculation/IEquationDefinitionInput #//categories/propertydefinitions/AProperty">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="quantityKindName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IntProperty" eSuperTypes="#//categories/propertydefinitions/AQudvTypeProperty #//categories/propertydefinitions/IIntrinsicTypeProperty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A ReferenceProperty can be understood as  a Pointer in C++ or a refrence in Java. It allows to instantiate new classes within a calss or to access already instatiated via a reference."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FloatProperty" eSuperTypes="#//categories/propertydefinitions/AQudvTypeProperty #//categories/propertydefinitions/IIntrinsicTypeProperty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A ReferenceProperty can be understood as  a Pointer in C++ or a refrence in Java. It allows to instantiate new classes within a calss or to access already instatiated via a reference."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringProperty" eSuperTypes="#//categories/propertydefinitions/AProperty #//categories/propertydefinitions/IIntrinsicTypeProperty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A ReferenceProperty can be understood as  a Pointer in C++ or a refrence in Java. It allows to instantiate new classes within a calss or to access already instatiated via a reference."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="BooleanProperty" eSuperTypes="#//categories/propertydefinitions/AProperty #//categories/propertydefinitions/IIntrinsicTypeProperty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A ReferenceProperty can be understood as  a Pointer in C++ or a refrence in Java. It allows to instantiate new classes within a calss or to access already instatiated via a reference."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EnumProperty" eSuperTypes="#//categories/propertydefinitions/AQudvTypeProperty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Enum proeprty is used to give users a pre selection of values. This preselection is available in the values. The instance to this enumproperty will hold a reference to one of these values"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="values" lowerBound="1"
            upperBound="-1" eType="#//categories/propertydefinitions/EnumValueDefinition"
            containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="defaultValue" eType="#//categories/propertydefinitions/EnumValueDefinition"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EnumValueDefinition" eSuperTypes="#//general/IName">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceProperty" eSuperTypes="#//categories/propertydefinitions/AProperty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Resource Property is used to create links into the file system. Docuemnts will be stored on the file system of the data model. This property allows to link it."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StaticArrayModifier" eSuperTypes="#//categories/propertydefinitions/IArrayModifier">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="arraySize" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IArrayModifier" abstract="true"
          interface="true"/>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicArrayModifier" eSuperTypes="#//categories/propertydefinitions/IArrayModifier"/>
    </eSubpackages>
    <eSubpackages name="propertyinstances" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/cp/cppi"
        nsPrefix="dvlm_cppi">
      <eClassifiers xsi:type="ecore:EClass" name="IUnitPropertyInstance" abstract="true"
          interface="true" eSuperTypes="#//categories/ATypeInstance">
        <eStructuralFeatures xsi:type="ecore:EReference" name="unit" eType="#//qudv/AUnit"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="APropertyInstance" abstract="true"
          eSuperTypes="#//categories/ATypeInstance"/>
      <eClassifiers xsi:type="ecore:EClass" name="ValuePropertyInstance" eSuperTypes="#//categories/propertyinstances/APropertyInstance #//calculation/IEquationInput #//inheritance/IOverridableInheritanceLink">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UnitValuePropertyInstance" eSuperTypes="#//categories/propertyinstances/APropertyInstance #//categories/propertyinstances/ValuePropertyInstance #//categories/propertyinstances/IUnitPropertyInstance">
        <eOperations name="getValueToBaseUnit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Convenience Method to directly convert the value to its base unit"/>
            <details key="body" value="double value = Double.parseDouble(getValue());&#xD;&#xA;AUnit unit = getUnit();&#xD;&#xA;if (unit != null) {&#xD;&#xA;&#x9;value = de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper.getInstance().convertFromSourceUnitToBaseUnit(unit, value);&#xD;&#xA;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;return value;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setValueAsBaseUnit">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Convenience Method to directly set a value in the frame of the base unit and convert it to the target unit as set in the current UnitValuePropertyInstance."/>
            <details key="body" value="AUnit unit = getUnit();&#xD;&#xA;if (unit != null) {&#xD;&#xA;&#x9;double targetValue = de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper.getInstance().convertFromBaseUnitToTargetUnit(unit, value);&#xD;&#xA;&#x9;String textualValue = Double.toString(targetValue);&#xD;&#xA;&#x9;setValue(textualValue);&#xD;&#xA;} else {&#xD;&#xA;&#x9;setValue(Double.toString(value));&#xD;&#xA;}"/>
          </eAnnotations>
          <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReferencePropertyInstance" eSuperTypes="#//categories/propertyinstances/APropertyInstance #//inheritance/IOverridableInheritanceLink">
        <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="#//categories/ATypeInstance"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EReferencePropertyInstance" eSuperTypes="#//categories/propertyinstances/APropertyInstance #//inheritance/IOverridableInheritanceLink">
        <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ComposedPropertyInstance" eSuperTypes="#//categories/propertyinstances/APropertyInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Composed Property is used to indicate that a Category will be instantaiated within the current Categoryassignment as containment. Not as a reference."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="typeInstance" eType="#//categories/CategoryAssignment"
            containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ArrayInstance" eSuperTypes="#//categories/propertyinstances/APropertyInstance">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Array Instance  is used to store and combine several Types of a given Property. The Array can contain ComposedProeprtyInstances or ValuePropertyInstances etc. but it cannot contain a CategoryAssignment since this has to be wrapped into a ComposedPropertyInstance"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="arrayInstances" upperBound="-1"
            eType="#//categories/propertyinstances/APropertyInstance" containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourcePropertyInstance" eSuperTypes="#//categories/propertyinstances/APropertyInstance #//inheritance/IOverridableInheritanceLink">
        <eOperations name="setUri">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Convenience Method to set the Uri String via an EMF URI"/>
            <details key="body" value="if (uri != null) {&#xD;&#xA;&#x9;setResourceUri(uri.toPlatformString(false));&#xD;&#xA;} else {&#xD;&#xA;&#x9;setResourceUri(null);&#xD;&#xA;}"/>
          </eAnnotations>
          <eParameters name="uri" eType="#//types/URI"/>
        </eOperations>
        <eOperations name="getUri" eType="#//types/URI">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Convenience Method to get the curently set Uri as EMF Platform Uri"/>
            <details key="body" value="if (resourceUri == null) {&#xD;&#xA;&#x9;return null;&#xD;&#xA;}&#xD;&#xA;return URI.createPlatformResourceURI(resourceUri, false);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="resourceUri" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EnumUnitPropertyInstance" eSuperTypes="#//categories/propertyinstances/APropertyInstance #//calculation/IEquationInput #//inheritance/IOverridableInheritanceLink #//categories/propertyinstances/IUnitPropertyInstance">
        <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//categories/propertydefinitions/EnumValueDefinition"/>
      </eClassifiers>
    </eSubpackages>
  </eSubpackages>
  <eSubpackages name="qudv" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/qudv" nsPrefix="dvlm_qudv">
    <eClassifiers xsi:type="ecore:EClass" name="AUnit" abstract="true" eSuperTypes="#//general/IName #//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitionURI" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="quantityKind" eType="#//qudv/AQuantityKind"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnitFactor" eSuperTypes="#//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="exponent" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="unit" eType="#//qudv/AUnit"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AConversionBasedUnit" abstract="true"
        eSuperTypes="#//qudv/AUnit">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isInvertible" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referenceUnit" lowerBound="1"
          eType="#//qudv/AUnit"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LinearConversionUnit" eSuperTypes="#//qudv/AConversionBasedUnit">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="factor" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AffineConversionUnit" eSuperTypes="#//qudv/AConversionBasedUnit">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="factor" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="offset" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PrefixedUnit" eSuperTypes="#//qudv/AConversionBasedUnit">
      <eStructuralFeatures xsi:type="ecore:EReference" name="prefix" lowerBound="1"
          eType="#//qudv/Prefix"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SimpleUnit" eSuperTypes="#//qudv/AUnit"/>
    <eClassifiers xsi:type="ecore:EClass" name="DerivedUnit" eSuperTypes="#//qudv/AUnit">
      <eStructuralFeatures xsi:type="ecore:EReference" name="factor" lowerBound="1"
          upperBound="-1" eType="#//qudv/UnitFactor" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Prefix" eSuperTypes="#//general/IName #//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="factor" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AQuantityKind" abstract="true" eSuperTypes="#//general/IName #//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitionURI" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="QuantityKind" eSuperTypes="#//qudv/AQuantityKind">
      <eStructuralFeatures xsi:type="ecore:EReference" name="general" lowerBound="1"
          eType="#//qudv/AQuantityKind"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SimpleQuantityKind" eSuperTypes="#//qudv/AQuantityKind"/>
    <eClassifiers xsi:type="ecore:EClass" name="DerivedQuantityKind" eSuperTypes="#//qudv/AQuantityKind">
      <eStructuralFeatures xsi:type="ecore:EReference" name="factor" lowerBound="1"
          upperBound="-1" eType="#//qudv/QuantityKindFactor" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SystemOfUnits" eSuperTypes="#//general/IName #//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitionURI" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="prefix" upperBound="-1"
          eType="#//qudv/Prefix" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="unit" upperBound="-1"
          eType="#//qudv/AUnit" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="baseUnit" upperBound="-1"
          eType="#//qudv/AUnit" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="systemOfQuantities" upperBound="-1"
          eType="#//qudv/SystemOfQuantities" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SystemOfQuantities" eSuperTypes="#//general/IName #//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitionURI" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="quantityKind" upperBound="-1"
          eType="#//qudv/AQuantityKind" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dimension" unique="false"
          upperBound="-1" eType="#//qudv/Dimension" unsettable="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Dimension">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbolicExpression" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="factor" upperBound="-1"
          eType="#//qudv/DimensionFactor"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DimensionFactor">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="exponent" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="baseDimension" lowerBound="1"
          eType="#//qudv/AQuantityKind"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="QuantityKindFactor" eSuperTypes="#//general/IUuid">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="exponent" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="quantityKind" lowerBound="1"
          eType="#//qudv/AQuantityKind"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="calculation" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/calc"
      nsPrefix="dvlm_calc">
    <eClassifiers xsi:type="ecore:EClass" name="IEquationDefinitionSectionContainer"
        abstract="true" interface="true">
      <eStructuralFeatures xsi:type="ecore:EReference" name="equationDefinitions"
          upperBound="-1" eType="#//calculation/EquationDefinition" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IEquationSectionContainer" abstract="true"
        interface="true">
      <eStructuralFeatures xsi:type="ecore:EReference" name="equationSection" eType="#//calculation/EquationSection"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EquationSection" eSuperTypes="#//calculation/IEquationSectionContainer #//inheritance/IInheritanceLink">
      <eStructuralFeatures xsi:type="ecore:EReference" name="imports" upperBound="-1"
          eType="#//calculation/Import" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="equations" upperBound="-1"
          eType="#//calculation/Equation" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="serializedStatements"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The serialized formulas are used as fall back strategy in case that the serialization of the formulas fail"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Import" eSuperTypes="#//inheritance/IInheritanceLink">
      <eStructuralFeatures xsi:type="ecore:EReference" name="importedNamespace" eType="#//general/IInstance"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Equation" eSuperTypes="#//inheritance/IOverridableInheritanceLink">
      <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//calculation/AExpression"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" eType="#//calculation/IEquationResult"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="resultText" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          iD="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="definition" eType="#//calculation/EquationDefinition"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EquationDefinition" eSuperTypes="#//calculation/IQualifiedEquationObject">
      <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//calculation/AExpression"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" eType="#//calculation/IEquationDefinitionResult"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IEquationResult" abstract="true" eSuperTypes="#//general/IUuid #//inheritance/IInheritanceLink"/>
    <eClassifiers xsi:type="ecore:EClass" name="IEquationDefinitionResult" abstract="true"
        eSuperTypes="#//calculation/IQualifiedEquationObject"/>
    <eClassifiers xsi:type="ecore:EClass" name="IEquationInput" abstract="true" eSuperTypes="#//inheritance/IInheritanceLink"/>
    <eClassifiers xsi:type="ecore:EClass" name="IEquationDefinitionInput" abstract="true"/>
    <eClassifiers xsi:type="ecore:EClass" name="EquationIntermediateResult" eSuperTypes="#//calculation/IEquationResult #//calculation/IEquationInput #//calculation/IEquationDefinitionInput #//calculation/IEquationDefinitionResult">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeInstanceResult" eSuperTypes="#//calculation/IEquationResult">
      <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="#//categories/ATypeInstance"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeDefinitionResult" eSuperTypes="#//calculation/IEquationDefinitionResult">
      <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="#//categories/ATypeDefinition"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="MathOperator">
      <eLiterals name="PLUS" literal="+"/>
      <eLiterals name="MINUS" value="1" literal="-"/>
      <eLiterals name="MULTIPLY" value="2" literal="*"/>
      <eLiterals name="DIVIDE" value="3" literal="/"/>
      <eLiterals name="POWER" value="4" literal="^"/>
      <eLiterals name="COS" value="5" literal="cos"/>
      <eLiterals name="SIN" value="6" literal="sin"/>
      <eLiterals name="TAN" value="7" literal="tan"/>
      <eLiterals name="ATAN" value="8" literal="atan"/>
      <eLiterals name="ACOS" value="9" literal="acos"/>
      <eLiterals name="ASIN" value="10" literal="asin"/>
      <eLiterals name="SQRT" value="11" literal="sqrt"/>
      <eLiterals name="LOG" value="12" literal="log"/>
      <eLiterals name="LN" value="13" literal="ln"/>
      <eLiterals name="EXP" value="14" literal="exp"/>
      <eLiterals name="LD" value="15" literal="ld"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AExpression" abstract="true" eSuperTypes="#//inheritance/IInheritanceLink #//calculation/IQualifiedEquationObject"/>
    <eClassifiers xsi:type="ecore:EClass" name="ALeftOpRightExpression" abstract="true"
        eSuperTypes="#//calculation/AExpression">
      <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="#//calculation/AExpression"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" eType="#//calculation/MathOperator"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#//calculation/AExpression"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AOpRightExpression" abstract="true"
        eSuperTypes="#//calculation/AExpression">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" eType="#//calculation/MathOperator"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#//calculation/AExpression"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AdditionAndSubtraction" eSuperTypes="#//calculation/ALeftOpRightExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="MultiplicationAndDivision" eSuperTypes="#//calculation/ALeftOpRightExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="PowerFunction" eSuperTypes="#//calculation/ALeftOpRightExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="Function" eSuperTypes="#//calculation/AOpRightExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="AAdvancedFunction" abstract="true"
        eSuperTypes="#//calculation/AExpression">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AdvancedFunction" eSuperTypes="#//calculation/AAdvancedFunction">
      <eStructuralFeatures xsi:type="ecore:EReference" name="inputs" upperBound="-1"
          eType="#//calculation/AExpression" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SetFunction" eSuperTypes="#//calculation/AAdvancedFunction">
      <eStructuralFeatures xsi:type="ecore:EReference" name="typeDefinition" eType="#//categories/ATypeDefinition"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="filterName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="depth" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="-1"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Parenthesis" eSuperTypes="#//calculation/AOpRightExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="ALiteral" abstract="true" eSuperTypes="#//calculation/AExpression"/>
    <eClassifiers xsi:type="ecore:EClass" name="ValuePi" eSuperTypes="#//calculation/ALiteral"/>
    <eClassifiers xsi:type="ecore:EClass" name="ValueE" eSuperTypes="#//calculation/ALiteral"/>
    <eClassifiers xsi:type="ecore:EClass" name="NumberLiteral" eSuperTypes="#//calculation/ALiteral">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ReferencedInput" eSuperTypes="#//calculation/ALiteral">
      <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="#//calculation/IEquationInput"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="definition" eType="#//calculation/ReferencedDefinitionInput"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ReferencedDefinitionInput" eSuperTypes="#//calculation/ALiteral">
      <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="#//calculation/IEquationDefinitionInput"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IQualifiedEquationObject" abstract="true"
        interface="true"/>
  </eSubpackages>
  <eSubpackages name="inheritance" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/i" nsPrefix="dvlm_i">
    <eClassifiers xsi:type="ecore:EClass" name="ICanInheritFrom" abstract="true" interface="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The canInheritFrom tells which SystemComponent can Inherit from which other ones. This can be used to make a ConfigurationElement inherit from a DefinitionElement but not the other way. This interface should only be used for Structural Elements."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="canInheritFrom" upperBound="-1"
          eType="#//structural/StructuralElement"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCanInheritFromAll"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IInheritsFrom" abstract="true" interface="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This interface is used to tell a StucturalElementInstance of which other StructuralElementInstance it actually inherits from."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="superSeis" upperBound="-1"
          eType="#//structural/StructuralElementInstance"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IInheritanceLink" abstract="true"
        interface="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This interface will be set by the inheritance mechanism to give information about a assigned categories and properties telling us where the information has been inherited from or if it has been inherited at all. Accordinbgly this interface should only be used for either CategoryAssignments or PropertyInstances."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="superTis" upperBound="-1"
          eType="#//inheritance/IInheritanceLink"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isInherited" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IOverridableInheritanceLink" abstract="true"
        interface="true" eSuperTypes="#//inheritance/IInheritanceLink">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This interface is intended for instances of properties only. they can be actually overriden or not. A Category Assignment can not be overriden from our current understanding."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="override" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="dmf" nsURI="http://www.virsat.sc.dlr.de/dvlm/v8/dmf" nsPrefix="dvlm_dmf">
    <eClassifiers xsi:type="ecore:EClass" name="DObject" abstract="true" eSuperTypes="#//general/IUuid #//general/IName"/>
    <eClassifiers xsi:type="ecore:EClass" name="DObjectContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="objects" upperBound="-1"
          eType="#//dmf/DObject" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UnresolveableDObject" eSuperTypes="#//dmf/DObject"/>
  </eSubpackages>
</ecore:EPackage>
