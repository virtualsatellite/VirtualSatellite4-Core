<!-- Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and 
	Software Technology, Germany. This program and the accompanying materials 
	are made available under the terms of the Eclipse Public License 2.0 which 
	is available at http://www.eclipse.org/legal/epl-2.0. SPDX-License-Identifier: 
	EPL-2.0 -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.dlr.sc.virsat</groupId>
	<artifactId>de.dlr.sc.virsat.parent</artifactId>
	<version>4.17.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<tycho-version>4.0.8</tycho-version>
		<tycho-extras-version>4.0.8</tycho-extras-version>
		<maven-license-version>2.4.0</maven-license-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<build.version>4.17.0</build.version>
		<build.qualifier>'t'yyyyMMddHHmm</build.qualifier>
		<maven.build.timestamp.format>'t'yyyyMMddHHmm</maven.build.timestamp.format>
		<build.folder.target>../builds</build.folder.target>
		<build.folder.p2>p2</build.folder.p2>
		<build.folder.bin>bin</build.folder.bin>
		<build.folder.target.secured>../deploy/secured</build.folder.target.secured>
		<build.folder.target.unsecured>../deploy/unsecured</build.folder.target.unsecured>
		<build.folder.target.bin>../builds/${build.folder.bin}</build.folder.target.bin>
		<build.folder.target.p2>../builds/${build.folder.p2}</build.folder.target.p2>
		<build.folder.type>test</build.folder.type>
		<build.file.zip>VirSat_Core_Test.zip</build.file.zip>
		<build.deploy.release>false</build.deploy.release>

		<!-- Sonar Code Coverage -->
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<skipTests>true</skipTests>
	</properties>
	<profiles>
		<profile>
			<id>deployUnsecured</id>
			<properties>
				<build.folder.target>${build.folder.target.unsecured}/</build.folder.target>
				<build.folder.target.bin>${build.folder.target.unsecured}/${build.folder.bin}</build.folder.target.bin>
				<build.folder.target.p2>${build.folder.target.unsecured}/${build.folder.p2}</build.folder.target.p2>
			</properties>
		</profile>
		<profile>
			<id>deployBackuped</id>
			<properties>
				<build.folder.target>${build.folder.target.secured}</build.folder.target>
				<build.folder.target.bin>${build.folder.target.secured}/${build.folder.bin}</build.folder.target.bin>
				<build.folder.target.p2>${build.folder.target.secured}/${build.folder.p2}</build.folder.target.p2>
			</properties>
		</profile>
		<profile>
			<id>development</id>
			<properties>
				<build.qualifier>'d'yyyyMMddHHmm</build.qualifier>
				<maven.build.timestamp.format>'d'yyyyMMddHHmm</maven.build.timestamp.format>
				<build.folder.type>development</build.folder.type>
				<build.file.core>VirSat_Core_Development</build.file.core>
				<build.file.server>VirSat_Server_Development</build.file.server>
			</properties>
		</profile>
		<profile>
			<id>integration</id>
			<properties>
				<build.qualifier>'i'yyyyMMddHHmm</build.qualifier>
				<maven.build.timestamp.format>'i'yyyyMMddHHmm</maven.build.timestamp.format>
				<build.folder.type>integration/${build.version}</build.folder.type>
				<build.file.core>VirSat_Core_Development_${build.version}</build.file.core>
				<build.file.server>VirSat_Server_Development_${build.version}</build.file.server>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<properties>
				<build.deploy.release>true</build.deploy.release>
				<build.qualifier>'r'yyyyMMddHHmm</build.qualifier>
				<maven.build.timestamp.format>'r'yyyyMMddHHmm</maven.build.timestamp.format>
				<build.folder.type>release/${build.version}/${env.GITHUB_SHA}</build.folder.type>
				<build.file.core>VirSat_Core_Development_${build.version}_${env.GITHUB_SHA}</build.file.core>
				<build.file.server>VirSat_Server_Development_${build.version}_${env.GITHUB_SHA}</build.file.server>
			</properties>
		</profile>
		<profile>
			<id>spotbugs</id>
			<build>
				<plugins><!-- Enabling the use of Spotbugs plugin -->
					<plugin>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs-maven-plugin</artifactId>
						<version>4.8.6.1</version>
						<dependencies>
							<dependency>
								<groupId>com.github.spotbugs</groupId>
								<artifactId>spotbugs</artifactId>
								<version>4.8.4</version>
							</dependency>
						</dependencies>
						<configuration>
							<excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
							<includeFilterFile>spotbugs-include.xml</includeFilterFile>
							<addSourceDirs>true</addSourceDirs>
							<debug>false</debug>
							<fork>true</fork>
							<failOnError>true</failOnError>
						</configuration>
						<executions>
							<execution>
								<id>verify</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>checkstyle</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>3.1.2</version>
						<dependencies>
							<dependency>
								<groupId>com.puppycrawl.tools</groupId>
								<artifactId>checkstyle</artifactId>
								<version>9.1</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>validate</id>
								<phase>validate</phase>
								<configuration>
									<configLocation>../checkStylesDefinition.xml</configLocation>
									<propertyExpansion>samedir=.</propertyExpansion>
									<encoding>UTF-8</encoding>
									<consoleOutput>true</consoleOutput>
									<failsOnError>true</failsOnError>
									<!-- violationSeverity>warning</violationSeverity -->
								</configuration>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>surefire</id>
			<properties>
				<skipTests>false</skipTests>
			</properties>
			<build>
				<plugins>
					<!-- The surefire plugin enables the unit test runs -->
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-surefire-plugin</artifactId>
						<version>${tycho-version}</version>
						<configuration>
							<!-- Let the tests run for 6 minutes max. If time is exceeded kill 
								the process. Apparently something is wrong -->
							<redirectTestOutputToFile>true</redirectTestOutputToFile>
							<showEclipseLog>false</showEclipseLog>
							
							<testFailureIgnore>false</testFailureIgnore>
							<failIfNoTests>false</failIfNoTests>
							<trimStackTrace>false</trimStackTrace>
							<appArgLine>-Dfile.encoding=UTF-8</appArgLine>
							<!-- Enable this line for remote debugging into surefire test executtion
							<argLine>-Xdebug -Xrunjdwp:transport=dt_socket,address=8123,server=y,suspend=y</argLine>
							 -->
							<useUIHarness>false</useUIHarness>
							<!--  Setup the osgi data and workspace directory. Otherwise the workspace will be placed
								in the plugins target directory, thus creating a repository within a repository (git from
								the source code). UI tests will then sometimes believe that the project is already connected
								to a VCS but in fact isn't. -->
							<osgiDataDirectory>${basedir}/../../surefire-work/${project.artifactId}/data</osgiDataDirectory>
							<work>${basedir}/../../surefire-work/${project.artifactId}/work</work>
							
							<excludes>
								<exclude>**/AllTests</exclude>
								<exclude>**/AllTestsGen</exclude>
							</excludes>
							
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-versions-plugin</artifactId>
				<version>${tycho-version}</version>
				<!-- executions> <execution> <id>versions</id> <phase>validate</phase> 
					<goals> <goal>update-pom</goal> </goals> </execution> </executions -->
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-compiler-plugin</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<showWarnings>true</showWarnings>
					<useProjectSettings>false</useProjectSettings>
				</configuration>
			</plugin>


			<!-- Enabling use of jacoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<format>${build.qualifier}</format>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho-version}</version>
				<extensions>true</extensions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<resolveWithExecutionEnvironmentConstraints>false</resolveWithExecutionEnvironmentConstraints>
					<executionEnvironment>none</executionEnvironment>
					<environments>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
					<target>
						<artifact>
							<groupId>de.dlr.sc.virsat</groupId>
							<artifactId>de.dlr.sc.virsat.target</artifactId>
							<version>4.17.0-SNAPSHOT</version>
							<classifier>virsat_windows</classifier>
						</artifact>
					</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project> 
