language: java

dist: xenial

jdk:
- openjdk8
 
services:
  # -----------------------------------------------------
  # Start up xvfb service for SWT bot GUI tests
  # -----------------------------------------------------
  - xvfb 
 
cache:
  directories:
  - $HOME/.m2

addons:
  # -----------------------------------------------------------
  # Make the sourceforge hosts known, thus ssh connections will
  # not ask to accept the finger print of the server
  # -----------------------------------------------------------
  ssh_known_hosts: frs.sourceforge.net
  # ---------------------------------------------------------------
  # Now use APT to install metacity, which is a window manager also 
  # needed for the SWTBOT UI tests
  # ---------------------------------------------------------------
  apt:
    packages:
    - libvtk6.2 # libvtk7.1 # for bionic. At the moment we are still with jdk8 which is on xenial only
    - libvtk6-java # libvtk7-java # for bionic
    # - libvtk7-jni # for bionic
    - libzmq5
    - libzmq-java
    - libzmq-jni
    - metacity
    - ant

install:
- true

stages:
# ------------------------------------
# Just one stage, multiple stages 
# with maven overcomplicate the things
# ------------------------------------
- name: verify
- name: build-test
- name: build-assemble-deploy

env:
  global:
  # ---------------------------------------------
  # API Token for access to github
  # ---------------------------------------------
  - secure: "POYGzbPXLBDe2BsehzJ7QUZ4toQ1Pbi2VdH8ZTSN9zqipLbBVnsMghs7Zf80C+AK1nKbY2DPWHwaWR6LE3MRhA9X3xeyYgJ/53J4JeMw1ORYpavVXJC9t8d+fMVCJhALzjQYz7PmE4ba/MHgr/UnoeNL2v1M/9mUpMbfD490jPUdOQjqpy0/FvM5HhXcQEwexUPsNsR+DffVSSmJ62aXHPM2pgKYaH0pnY5OYwm4t7v7lp8GgQf+b163+rD2LyLIEeLiQ1msXAqaRSBznuu2wqi7N3ZC176i864fRHf8M4RYbWqA0BneCd0keAQJLvpcPBoyE1T0XKYvjz5JdjbuNDX1p4waLo7CnU+UJzuCQ5hnkrDm7YJhwQY007T2kudUTPl0dP0TeoJsDtz30vvBC82equJA5+0xPb1BvvDmdKFkfF7gOGh05qjhAo3TJ8D5CXXFmdPr9VApYv0zqzh0hR5p+5FHkDmKhzJ7xg4jpo04IXa8ztBCjoB4dyLnUDhyTABtA5/uoRuMA4I7nc25mKL6Z9fz8O8HadAInlJFXyodQOrvD68k2Bf9WJWreZMKcLJiOWQC0bbPNa6ABrRpiuzdUdWEpzNjJJYktmPl+JwHAJ4Fa3CHaNFILaLLC9Z3gtrdNT2+PkME8u0sfVWZ1nU4nNO9EGUItcBEFhkCnZE="
  # ---------------------------------------------
  # Setup Overtarget Repository and Version
  # ---------------------------------------------
  - OVERTARGET_VERSION=1.1.0.r201903120902
  - OVERTARGET_REPO=https://sourceforge.net/projects/overtarget/files/release/1.1.0/25/plugins
  - OVERTARGET_GROUP=de.dlr.sc.overtarget
  - JUNIT_DEBUG_PROJECT_TEST_CASE=true
  - SWTBOT_SCREENSHOT=true

before_script:
  # -----------------------------------
  # Startup the metacity window manager
  # -----------------------------------
  - metacity --sm-disable --replace 2> metacity.err &
  # -------------------------------------------------------------------
  # create adirectory for Overtarget and try to receive language plugin
  # -------------------------------------------------------------------
  - mkdir -p ./OverTarget
  - travis_retry curl -v -L -o ./OverTarget/OverTarget.jar ${OVERTARGET_REPO}/${OVERTARGET_GROUP}.language_${OVERTARGET_VERSION}.jar/download#
  - mvn install:install-file -Dfile=./OverTarget/OverTarget.jar -DgroupId=${OVERTARGET_GROUP} -DartifactId=${OVERTARGET_GROUP}.language -Dversion=${OVERTARGET_VERSION} -Dpackaging=jar
  # --------------------------------------------------------------
  # Setup environment variables for correct linking of vtk and zmq
  # --------------------------------------------------------------
  - source bash/setup_environment.sh
  
after_failure:
  # ----------------------------------------
  # Decrypt the key for accessign the 
  # deployment store and add it to ssh-agent
  # then try to deploy the screenshots from 
  # SWTBot to see what happened 
  # ----------------------------------------
  - bash/deploy_sourceforge.sh -k $encrypted_9c25c12f834a_key -i $encrypted_9c25c12f834a_iv -u swtbot
  # ---------------------------------------
  # Show the debug output of Surefire Junit
  # ---------------------------------------
  - cat $TRAVIS_BUILD_DIR/de.dlr.sc.virsat.test/target/surefire-reports/de.dlr.sc.virsat.test.ProjectAllTest-output.txt
  
jobs:
  include:
    # --------------------------------------------
    # Run a quicksanity check if all commits are
    # handed in by known users
    #---------------------------------------------
    - stage: verify
      name: Verify - Authors Sanity Check
      script:
      - ./bash/verify_commit_authors.sh known_authors.txt
  
    # -----------------------------------------------------
    # Build and Test - SpotBugs Jobs
    # -----------------------------------------------------
    # --- Development and Feature Branches
    - stage: build-test
      if: branch NOT IN (integration, integration_snapshot, development_snapshot) AND NOT (tag =~ /^Release/)
      name: Build and Test - SpotBugs - Development and Features
      script:
      - bash/maven_build.sh -j spotbugs -p development
    # ----------------------------
    # --- Integration Branches
    - stage: build-test
      if: branch = integration
      name: Build and Test - SpotBugs - Integration
      script:
      - bash/maven_build.sh -j spotbugs -p integration
    # ----------------------------
    # --- Release Tags
    - stage: build-test
      if: tag =~ /^Release/
      name: Build and Test - SpotBugs - Release
      script:
      - bash/maven_build.sh -j spotbugs -p release   
    
    # -----------------------------------------------------
    # Build and Test - Surefire Jobs
    # -----------------------------------------------------
    # --- Development and Feature Branches
    - stage: build-test
      if: branch NOT IN (integration, integration_snapshot, development_snapshot) AND NOT (tag =~ /^Release/)
      name: Build and Test - Surefire - Development and Features
      script:
      - bash/maven_build.sh -j surefire -p development   
    # ----------------------------
    # --- Integration Branches
    - stage: build-test
      if: branch = integration
      name: Build and Test - Surefire - Integration
      script:
      - bash/maven_build.sh -j surefire -p integration   
    # ----------------------------
    # --- Release Tags
    - stage: build-test
      if: tag =~ /^Release/
      name: Build and Test - Surefire - Release
      script:
      - bash/maven_build.sh -j surefire -p release   

    # -----------------------------------------------------
    # Build and Test - Checkstyle Jobs
    # -----------------------------------------------------
    # --- Development and Feature Branches
    - stage: build-test
      if: branch NOT IN (integration, integration_snapshot, development_snapshot) AND NOT (tag =~ /^Release/)
      name: Build and Test - Checkstyle - Development and Features
      script:
      - bash/maven_build.sh -j checkstyle -p development   
    # ----------------------------
    # --- Integration Branches
    - stage: build-test
      if: branch = integration
      name: Build and Test - Checkstyle - Integration
      script:
      - bash/maven_build.sh -j checkstyle -p integration   
    # ----------------------------
    # --- Release Tags
    - stage: build-test
      if: tag =~ /^Release/
      name: Build and Test - Checkstyle - Release
      script:
      - bash/maven_build.sh -j checkstyle -p release   

    # -----------------------------------------------------------
    # -----------------------------------------------------------
    # Here are the jobs for the assemble and deploy stage
    # -----------------------------------------------------------
    # --- The Job for feature branches only. Assemble the product, but don't deploy
    - stage: build-assemble-deploy
      if: branch NOT IN (integration, development, integration_snapshot, development_snapshot) AND NOT (tag =~ /^Release/)
      name: Build-Assemble-Deploy - Feature
      script:
      - bash/maven_build.sh -j assemble -p development   

    # -----------------------------------------------------------
    # Deploy Jobs for unsecured Development.
    #------------------------------------------------------------
    - stage: build-assemble-deploy
      if: branch = development
      name: Build-Assemble-Deploy - Development
      script:
      - bash/maven_build.sh -j assemble -p development   
      before_deploy:
        # -----------------------------------------------------------
        # Update the development tag beforehand
        # And send it back to the origin, otherwise travis will 
        # apparently perform a git fetch before, and overwrite the
        # moved tag back to the previous state.
        #------------------------------------------------------------
        - git tag -f development_snapshot
        - git remote add github-mtd  https://${GITHUB_API_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push -f github-mtd development_snapshot
        - git remote remove github-mtd
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the newly created tag.
        # release is attached to the tag on the current commit.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file:
        - deploy/unsecured/p2/**/zip/*_p2.zip
        - deploy/unsecured/bin/**/*.zip
        - deploy/unsecured/bin/**/*.tar.gz
        - de.dlr.sc.virsat.docs.feature/docs/*.pdf
        skip_cleanup: true
        name: Virtual Satellite 4 Core Development Build
        body: Development build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This release is subject to constant change.
        prerelease: true
        overwrite: true
        target_commitish: $TRAVIS_COMMIT
        on:
          repo: virtualsatellite/VirtualSatellite4-Core
          branch: development
      - provider: script
        skip_cleanup: true
        script: bash bash/deploy_sourceforge.sh -k $encrypted_9c25c12f834a_key -i $encrypted_9c25c12f834a_iv -u development
        on:
          repo: virtualsatellite/VirtualSatellite4-Core
          branch: development
          
      
    # -----------------------------------------------------------
    # Deploy Jobs for unsecured Integration.
    #------------------------------------------------------------
    - stage: build-assemble-deploy
      if: branch = integration
      name: Build-Assemble-Deploy - Integration
      script:
      - bash/maven_build.sh -j assemble -p integration   
      before_deploy:
        # -----------------------------------------------------------
        # Update the development tag beforehand
        # And send it back to the origin, otherwise travis will 
        # apparently perform a git fetch before, and overwrite the
        # moved tag back to the previous state.
        #------------------------------------------------------------
        - git tag -f integration_snapshot
        - git remote add github-mtd  https://${GITHUB_API_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push -f github-mtd integration_snapshot
        - git remote remove github-mtd
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the newly created tag.
        # release is attached to the tag on the current commit.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file: 
        - deploy/unsecured/p2/**/zip/*_p2.zip
        - deploy/unsecured/bin/**/*.zip
        - deploy/unsecured/bin/**/*.tar.gz
        - de.dlr.sc.virsat.docs.feature/docs/*.pdf
        skip_cleanup: true
        name: Virtual Satellite 4 Core Integration Build
        body: Integration build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This release is subject to constant change.
        prerelease: true
        overwrite: true
        target_commitish: $TRAVIS_COMMIT
        on:
          repo: virtualsatellite/VirtualSatellite4-Core
          branch: integration
      # ---------------------------------------------
      # push build to sourceforge repo for deployment
      # ---------------------------------------------    
      - provider: script
        skip_cleanup: true
        script: bash bash/deploy_sourceforge.sh -k $encrypted_9c25c12f834a_key -i $encrypted_9c25c12f834a_iv -u integration
        on:
          repo: virtualsatellite/VirtualSatellite4-Core
          branch: integration
    
    # -----------------------------------------------------------
    # Deploy Jobs for secured Releases.
    #------------------------------------------------------------
    - stage: build-assemble-deploy
      if: tag =~ /^Release/
      name: Build-Assemble-Deploy - Release
      script:
      - bash/maven_build.sh -j assemble -p release   
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the Release Tag.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file: 
        - deploy/secured/p2/**/zip/*_p2.zip
        - deploy/secured/bin/**/*.zip
        - deploy/secured/bin/**/*.tar.gz
        - de.dlr.sc.virsat.docs.feature/docs/*.pdf
        skip_cleanup: true
        name: Virtual Satellite 4 Core Release Build
        body: Release build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This is a stable release.
        prerelease: true
        on:
          repo: virtualsatellite/VirtualSatellite4-Core
          tags: true
      # ---------------------------------------------   
      # push build to sourceforge repo for deployment
      # ---------------------------------------------    
      - provider: script
        skip_cleanup: true
        script: bash bash/deploy_sourceforge.sh -k $encrypted_9c25c12f834a_key -i $encrypted_9c25c12f834a_iv -u release
        on:
          repo: virtualsatellite/VirtualSatellite4-Core
          tags: true
                    